`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 01/31/2022 02:05:58 PM
// Design Name: 
// Module Name: miniproject_1
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module miniproject_1(
    input clk, // clock
    input reset, // reset value for button reset
    input [3:0] sw,
    input [1:0] speed,
    output PWM
    );
    
    reg [20:0] counter;`
    reg [20:0] width;
    reg temp_PWM;
    
    initial begin
        counter = 0;
        width = 0;
        temp_PWM = 0;
    end
    
    always@(posedge clk) begin
        if(reset)
            counter <= 0;
        else
            counter <= counter + 1;
            
        if(counter < width)
            temp_PWM <= 1;
        else
            temp_PWM <= 0;
    end
    
    always@(*)begin
        if (sw[0]) begin
            speed = 0;
        end
        else if (sw[1]) begin
            speed = 1;
        end
        else if (sw[2]) begin
            speed = 2;
        end
        else if (sw[3]) begin
            speed = 3;
        end
    end
    
    always @ (*) begin
        case(speed)
            2'd0 : width =21'd416666;
            2'd1 : width =21'd833333;
            2'd2 : width =21'd1250000;
            2'd3 : width =21'd1583332;
            default : width =21'd0;
        endcase
    end
    
    assign PWM = temp_PWM; 
    
endmodule
